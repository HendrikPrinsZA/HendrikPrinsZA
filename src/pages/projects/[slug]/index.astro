---
import { type CollectionEntry, getCollection } from "astro:content";
import Posts from "@layouts/Posts.astro";
import PostDetails from "@layouts/PostDetails.astro";
import getSortedPosts from "@utils/getSortedPosts";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";
import getSortedProjects from "@utils/getSortedProjects";
import ProjectDetails from "@layouts/ProjectDetails.astro";
import Projects from "@layouts/Projects.astro";

export interface Props {
  project: CollectionEntry<"projects">;
}

export async function getStaticPaths() {
  const projects = await getCollection("projects", ({ data }) => !data.draft);

  const postResult = projects.map(project => ({
    params: { slug: project.slug },
    props: { project },
  }));

  const pagePaths = getPageNumbers(projects.length).map(pageNum => ({
    params: { slug: String(pageNum) },
  }));

  return [...postResult, ...pagePaths];
}

const { slug } = Astro.params;
const { project } = Astro.props;

const projects = await getCollection("projects");

const sortedProjects = getSortedProjects(projects);

const pagination = getPagination({
  posts: sortedProjects,
  page: slug,
});

// We need to prerender, limited support for markdown with Astro (some docs somewhere)
export const prerender = true;
---

{project ? <ProjectDetails project={project} /> : <Projects {...pagination} />}
